# from http://transvoxel.org/Transvoxel.cpp
# cf http://transvoxel.org/Lengyel-VoxelTerrain.pdf
#
# each voxel can be categorized by its 8 corners (is it negative or positive)
# that makes use a byte, which we can look for in a lut
# 
# voxel_classes gives us the equivalence class index a voxel belongs too
# class_indexes gives us the vertex count, the triangle count, and the index list of the triangulation
# voxel_vertices gives us the vertices used by class_indexes, for a given voxel byte. We dont care about
#                 the high byte, and the low byte got the 2 endpoint indices
#
# outputs a simpler lut, with 3 bytes per voxel category:
# 2 bits: triangle count ; 5*6 bits: edges (6 bit <=> 2*3 bit: vertex index)
# *3 (max 15 edges, ie 5 triangles. the triangle count can be distributed across multiple bytes)


voxel_classes = '''
	0x00, 0x01, 0x01, 0x03, 0x01, 0x03, 0x02, 0x04, 0x01, 0x02, 0x03, 0x04, 0x03, 0x04, 0x04, 0x03,
	0x01, 0x03, 0x02, 0x04, 0x02, 0x04, 0x06, 0x0C, 0x02, 0x05, 0x05, 0x0B, 0x05, 0x0A, 0x07, 0x04,
	0x01, 0x02, 0x03, 0x04, 0x02, 0x05, 0x05, 0x0A, 0x02, 0x06, 0x04, 0x0C, 0x05, 0x07, 0x0B, 0x04,
	0x03, 0x04, 0x04, 0x03, 0x05, 0x0B, 0x07, 0x04, 0x05, 0x07, 0x0A, 0x04, 0x08, 0x0E, 0x0E, 0x03,
	0x01, 0x02, 0x02, 0x05, 0x03, 0x04, 0x05, 0x0B, 0x02, 0x06, 0x05, 0x07, 0x04, 0x0C, 0x0A, 0x04,
	0x03, 0x04, 0x05, 0x0A, 0x04, 0x03, 0x07, 0x04, 0x05, 0x07, 0x08, 0x0E, 0x0B, 0x04, 0x0E, 0x03,
	0x02, 0x06, 0x05, 0x07, 0x05, 0x07, 0x08, 0x0E, 0x06, 0x09, 0x07, 0x0F, 0x07, 0x0F, 0x0E, 0x0D,
	0x04, 0x0C, 0x0B, 0x04, 0x0A, 0x04, 0x0E, 0x03, 0x07, 0x0F, 0x0E, 0x0D, 0x0E, 0x0D, 0x02, 0x01,
	0x01, 0x02, 0x02, 0x05, 0x02, 0x05, 0x06, 0x07, 0x03, 0x05, 0x04, 0x0A, 0x04, 0x0B, 0x0C, 0x04,
	0x02, 0x05, 0x06, 0x07, 0x06, 0x07, 0x09, 0x0F, 0x05, 0x08, 0x07, 0x0E, 0x07, 0x0E, 0x0F, 0x0D,
	0x03, 0x05, 0x04, 0x0B, 0x05, 0x08, 0x07, 0x0E, 0x04, 0x07, 0x03, 0x04, 0x0A, 0x0E, 0x04, 0x03,
	0x04, 0x0A, 0x0C, 0x04, 0x07, 0x0E, 0x0F, 0x0D, 0x0B, 0x0E, 0x04, 0x03, 0x0E, 0x02, 0x0D, 0x01,
	0x03, 0x05, 0x05, 0x08, 0x04, 0x0A, 0x07, 0x0E, 0x04, 0x07, 0x0B, 0x0E, 0x03, 0x04, 0x04, 0x03,
	0x04, 0x0B, 0x07, 0x0E, 0x0C, 0x04, 0x0F, 0x0D, 0x0A, 0x0E, 0x0E, 0x02, 0x04, 0x03, 0x0D, 0x01,
	0x04, 0x07, 0x0A, 0x0E, 0x0B, 0x0E, 0x0E, 0x02, 0x0C, 0x0F, 0x04, 0x0D, 0x04, 0x0D, 0x03, 0x01,
	0x03, 0x04, 0x04, 0x03, 0x04, 0x03, 0x0D, 0x01, 0x04, 0x0D, 0x03, 0x01, 0x03, 0x01, 0x01, 0x00
'''

class_indexes = '''
	{0x00, {}},
	{0x31, {0, 1, 2}},
	{0x62, {0, 1, 2, 3, 4, 5}},
	{0x42, {0, 1, 2, 0, 2, 3}},
	{0x53, {0, 1, 4, 1, 3, 4, 1, 2, 3}},
	{0x73, {0, 1, 2, 0, 2, 3, 4, 5, 6}},
	{0x93, {0, 1, 2, 3, 4, 5, 6, 7, 8}},
	{0x84, {0, 1, 4, 1, 3, 4, 1, 2, 3, 5, 6, 7}},
	{0x84, {0, 1, 2, 0, 2, 3, 4, 5, 6, 4, 6, 7}},
	{0xC4, {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}},
	{0x64, {0, 4, 5, 0, 1, 4, 1, 3, 4, 1, 2, 3}},
	{0x64, {0, 5, 4, 0, 4, 1, 1, 4, 3, 1, 3, 2}},
	{0x64, {0, 4, 5, 0, 3, 4, 0, 1, 3, 1, 2, 3}},
	{0x64, {0, 1, 2, 0, 2, 3, 0, 3, 4, 0, 4, 5}},
	{0x75, {0, 1, 2, 0, 2, 3, 0, 3, 4, 0, 4, 5, 0, 5, 6}},
	{0x95, {0, 4, 5, 0, 3, 4, 0, 1, 3, 1, 2, 3, 6, 7, 8}}
'''

voxel_vertices = '''
	{},
	{0x6201, 0x5102, 0x3304},
	{0x6201, 0x2315, 0x4113},
	{0x5102, 0x3304, 0x2315, 0x4113},
	{0x5102, 0x4223, 0x1326},
	{0x3304, 0x6201, 0x4223, 0x1326},
	{0x6201, 0x2315, 0x4113, 0x5102, 0x4223, 0x1326},
	{0x4223, 0x1326, 0x3304, 0x2315, 0x4113},
	{0x4113, 0x8337, 0x4223},
	{0x6201, 0x5102, 0x3304, 0x4223, 0x4113, 0x8337},
	{0x6201, 0x2315, 0x8337, 0x4223},
	{0x5102, 0x3304, 0x2315, 0x8337, 0x4223},
	{0x5102, 0x4113, 0x8337, 0x1326},
	{0x4113, 0x8337, 0x1326, 0x3304, 0x6201},
	{0x6201, 0x2315, 0x8337, 0x1326, 0x5102},
	{0x3304, 0x2315, 0x8337, 0x1326},
	{0x3304, 0x1146, 0x2245},
	{0x6201, 0x5102, 0x1146, 0x2245},
	{0x6201, 0x2315, 0x4113, 0x3304, 0x1146, 0x2245},
	{0x2315, 0x4113, 0x5102, 0x1146, 0x2245},
	{0x5102, 0x4223, 0x1326, 0x3304, 0x1146, 0x2245},
	{0x1146, 0x2245, 0x6201, 0x4223, 0x1326},
	{0x3304, 0x1146, 0x2245, 0x6201, 0x2315, 0x4113, 0x5102, 0x4223, 0x1326},
	{0x4223, 0x1326, 0x1146, 0x2245, 0x2315, 0x4113},
	{0x4223, 0x4113, 0x8337, 0x3304, 0x1146, 0x2245},
	{0x6201, 0x5102, 0x1146, 0x2245, 0x4223, 0x4113, 0x8337},
	{0x4223, 0x6201, 0x2315, 0x8337, 0x3304, 0x1146, 0x2245},
	{0x4223, 0x8337, 0x2315, 0x2245, 0x1146, 0x5102},
	{0x5102, 0x4113, 0x8337, 0x1326, 0x3304, 0x1146, 0x2245},
	{0x4113, 0x8337, 0x1326, 0x1146, 0x2245, 0x6201},
	{0x6201, 0x2315, 0x8337, 0x1326, 0x5102, 0x3304, 0x1146, 0x2245},
	{0x2245, 0x2315, 0x8337, 0x1326, 0x1146},
	{0x2315, 0x2245, 0x8157},
	{0x6201, 0x5102, 0x3304, 0x2315, 0x2245, 0x8157},
	{0x4113, 0x6201, 0x2245, 0x8157},
	{0x2245, 0x8157, 0x4113, 0x5102, 0x3304},
	{0x5102, 0x4223, 0x1326, 0x2315, 0x2245, 0x8157},
	{0x6201, 0x4223, 0x1326, 0x3304, 0x2315, 0x2245, 0x8157},
	{0x6201, 0x2245, 0x8157, 0x4113, 0x5102, 0x4223, 0x1326},
	{0x4223, 0x1326, 0x3304, 0x2245, 0x8157, 0x4113},
	{0x4223, 0x4113, 0x8337, 0x2315, 0x2245, 0x8157},
	{0x6201, 0x5102, 0x3304, 0x4223, 0x4113, 0x8337, 0x2315, 0x2245, 0x8157},
	{0x8337, 0x4223, 0x6201, 0x2245, 0x8157},
	{0x5102, 0x3304, 0x2245, 0x8157, 0x8337, 0x4223},
	{0x5102, 0x4113, 0x8337, 0x1326, 0x2315, 0x2245, 0x8157},
	{0x4113, 0x8337, 0x1326, 0x3304, 0x6201, 0x2315, 0x2245, 0x8157},
	{0x5102, 0x1326, 0x8337, 0x8157, 0x2245, 0x6201},
	{0x8157, 0x8337, 0x1326, 0x3304, 0x2245},
	{0x2315, 0x3304, 0x1146, 0x8157},
	{0x6201, 0x5102, 0x1146, 0x8157, 0x2315},
	{0x3304, 0x1146, 0x8157, 0x4113, 0x6201},
	{0x4113, 0x5102, 0x1146, 0x8157},
	{0x2315, 0x3304, 0x1146, 0x8157, 0x5102, 0x4223, 0x1326},
	{0x1326, 0x4223, 0x6201, 0x2315, 0x8157, 0x1146},
	{0x3304, 0x1146, 0x8157, 0x4113, 0x6201, 0x5102, 0x4223, 0x1326},
	{0x1326, 0x1146, 0x8157, 0x4113, 0x4223},
	{0x2315, 0x3304, 0x1146, 0x8157, 0x4223, 0x4113, 0x8337},
	{0x6201, 0x5102, 0x1146, 0x8157, 0x2315, 0x4223, 0x4113, 0x8337},
	{0x3304, 0x1146, 0x8157, 0x8337, 0x4223, 0x6201},
	{0x4223, 0x5102, 0x1146, 0x8157, 0x8337},
	{0x2315, 0x3304, 0x1146, 0x8157, 0x5102, 0x4113, 0x8337, 0x1326},
	{0x6201, 0x4113, 0x8337, 0x1326, 0x1146, 0x8157, 0x2315},
	{0x6201, 0x3304, 0x1146, 0x8157, 0x8337, 0x1326, 0x5102},
	{0x1326, 0x1146, 0x8157, 0x8337},
	{0x1326, 0x8267, 0x1146},
	{0x6201, 0x5102, 0x3304, 0x1326, 0x8267, 0x1146},
	{0x6201, 0x2315, 0x4113, 0x1326, 0x8267, 0x1146},
	{0x5102, 0x3304, 0x2315, 0x4113, 0x1326, 0x8267, 0x1146},
	{0x5102, 0x4223, 0x8267, 0x1146},
	{0x3304, 0x6201, 0x4223, 0x8267, 0x1146},
	{0x5102, 0x4223, 0x8267, 0x1146, 0x6201, 0x2315, 0x4113},
	{0x1146, 0x8267, 0x4223, 0x4113, 0x2315, 0x3304},
	{0x4113, 0x8337, 0x4223, 0x1326, 0x8267, 0x1146},
	{0x6201, 0x5102, 0x3304, 0x4223, 0x4113, 0x8337, 0x1326, 0x8267, 0x1146},
	{0x6201, 0x2315, 0x8337, 0x4223, 0x1326, 0x8267, 0x1146},
	{0x5102, 0x3304, 0x2315, 0x8337, 0x4223, 0x1326, 0x8267, 0x1146},
	{0x8267, 0x1146, 0x5102, 0x4113, 0x8337},
	{0x6201, 0x4113, 0x8337, 0x8267, 0x1146, 0x3304},
	{0x6201, 0x2315, 0x8337, 0x8267, 0x1146, 0x5102},
	{0x1146, 0x3304, 0x2315, 0x8337, 0x8267},
	{0x3304, 0x1326, 0x8267, 0x2245},
	{0x1326, 0x8267, 0x2245, 0x6201, 0x5102},
	{0x3304, 0x1326, 0x8267, 0x2245, 0x6201, 0x2315, 0x4113},
	{0x1326, 0x8267, 0x2245, 0x2315, 0x4113, 0x5102},
	{0x5102, 0x4223, 0x8267, 0x2245, 0x3304},
	{0x6201, 0x4223, 0x8267, 0x2245},
	{0x5102, 0x4223, 0x8267, 0x2245, 0x3304, 0x6201, 0x2315, 0x4113},
	{0x4113, 0x4223, 0x8267, 0x2245, 0x2315},
	{0x3304, 0x1326, 0x8267, 0x2245, 0x4223, 0x4113, 0x8337},
	{0x1326, 0x8267, 0x2245, 0x6201, 0x5102, 0x4223, 0x4113, 0x8337},
	{0x3304, 0x1326, 0x8267, 0x2245, 0x4223, 0x6201, 0x2315, 0x8337},
	{0x5102, 0x1326, 0x8267, 0x2245, 0x2315, 0x8337, 0x4223},
	{0x3304, 0x2245, 0x8267, 0x8337, 0x4113, 0x5102},
	{0x8337, 0x8267, 0x2245, 0x6201, 0x4113},
	{0x5102, 0x6201, 0x2315, 0x8337, 0x8267, 0x2245, 0x3304},
	{0x2315, 0x8337, 0x8267, 0x2245},
	{0x2315, 0x2245, 0x8157, 0x1326, 0x8267, 0x1146},
	{0x6201, 0x5102, 0x3304, 0x2315, 0x2245, 0x8157, 0x1326, 0x8267, 0x1146},
	{0x6201, 0x2245, 0x8157, 0x4113, 0x1326, 0x8267, 0x1146},
	{0x2245, 0x8157, 0x4113, 0x5102, 0x3304, 0x1326, 0x8267, 0x1146},
	{0x4223, 0x8267, 0x1146, 0x5102, 0x2315, 0x2245, 0x8157},
	{0x3304, 0x6201, 0x4223, 0x8267, 0x1146, 0x2315, 0x2245, 0x8157},
	{0x4223, 0x8267, 0x1146, 0x5102, 0x6201, 0x2245, 0x8157, 0x4113},
	{0x3304, 0x2245, 0x8157, 0x4113, 0x4223, 0x8267, 0x1146},
	{0x4223, 0x4113, 0x8337, 0x2315, 0x2245, 0x8157, 0x1326, 0x8267, 0x1146},
	{0x6201, 0x5102, 0x3304, 0x4223, 0x4113, 0x8337, 0x2315, 0x2245, 0x8157, 0x1326, 0x8267, 0x1146},
	{0x8337, 0x4223, 0x6201, 0x2245, 0x8157, 0x1326, 0x8267, 0x1146},
	{0x4223, 0x5102, 0x3304, 0x2245, 0x8157, 0x8337, 0x1326, 0x8267, 0x1146},
	{0x8267, 0x1146, 0x5102, 0x4113, 0x8337, 0x2315, 0x2245, 0x8157},
	{0x6201, 0x4113, 0x8337, 0x8267, 0x1146, 0x3304, 0x2315, 0x2245, 0x8157},
	{0x8337, 0x8267, 0x1146, 0x5102, 0x6201, 0x2245, 0x8157},
	{0x3304, 0x2245, 0x8157, 0x8337, 0x8267, 0x1146},
	{0x8157, 0x2315, 0x3304, 0x1326, 0x8267},
	{0x8267, 0x8157, 0x2315, 0x6201, 0x5102, 0x1326},
	{0x8267, 0x1326, 0x3304, 0x6201, 0x4113, 0x8157},
	{0x8267, 0x8157, 0x4113, 0x5102, 0x1326},
	{0x5102, 0x4223, 0x8267, 0x8157, 0x2315, 0x3304},
	{0x2315, 0x6201, 0x4223, 0x8267, 0x8157},
	{0x3304, 0x5102, 0x4223, 0x8267, 0x8157, 0x4113, 0x6201},
	{0x4113, 0x4223, 0x8267, 0x8157},
	{0x8157, 0x2315, 0x3304, 0x1326, 0x8267, 0x4223, 0x4113, 0x8337},
	{0x8157, 0x2315, 0x6201, 0x5102, 0x1326, 0x8267, 0x4223, 0x4113, 0x8337},
	{0x8157, 0x8337, 0x4223, 0x6201, 0x3304, 0x1326, 0x8267},
	{0x5102, 0x1326, 0x8267, 0x8157, 0x8337, 0x4223},
	{0x8267, 0x8157, 0x2315, 0x3304, 0x5102, 0x4113, 0x8337},
	{0x6201, 0x4113, 0x8337, 0x8267, 0x8157, 0x2315},
	{0x6201, 0x3304, 0x5102, 0x8337, 0x8267, 0x8157},
	{0x8337, 0x8267, 0x8157},
	{0x8337, 0x8157, 0x8267},
	{0x6201, 0x5102, 0x3304, 0x8337, 0x8157, 0x8267},
	{0x6201, 0x2315, 0x4113, 0x8337, 0x8157, 0x8267},
	{0x5102, 0x3304, 0x2315, 0x4113, 0x8337, 0x8157, 0x8267},
	{0x5102, 0x4223, 0x1326, 0x8337, 0x8157, 0x8267},
	{0x6201, 0x4223, 0x1326, 0x3304, 0x8337, 0x8157, 0x8267},
	{0x6201, 0x2315, 0x4113, 0x5102, 0x4223, 0x1326, 0x8337, 0x8157, 0x8267},
	{0x4223, 0x1326, 0x3304, 0x2315, 0x4113, 0x8337, 0x8157, 0x8267},
	{0x4113, 0x8157, 0x8267, 0x4223},
	{0x4223, 0x4113, 0x8157, 0x8267, 0x6201, 0x5102, 0x3304},
	{0x8157, 0x8267, 0x4223, 0x6201, 0x2315},
	{0x3304, 0x2315, 0x8157, 0x8267, 0x4223, 0x5102},
	{0x1326, 0x5102, 0x4113, 0x8157, 0x8267},
	{0x8157, 0x4113, 0x6201, 0x3304, 0x1326, 0x8267},
	{0x1326, 0x5102, 0x6201, 0x2315, 0x8157, 0x8267},
	{0x8267, 0x1326, 0x3304, 0x2315, 0x8157},
	{0x3304, 0x1146, 0x2245, 0x8337, 0x8157, 0x8267},
	{0x6201, 0x5102, 0x1146, 0x2245, 0x8337, 0x8157, 0x8267},
	{0x6201, 0x2315, 0x4113, 0x3304, 0x1146, 0x2245, 0x8337, 0x8157, 0x8267},
	{0x2315, 0x4113, 0x5102, 0x1146, 0x2245, 0x8337, 0x8157, 0x8267},
	{0x5102, 0x4223, 0x1326, 0x3304, 0x1146, 0x2245, 0x8337, 0x8157, 0x8267},
	{0x1146, 0x2245, 0x6201, 0x4223, 0x1326, 0x8337, 0x8157, 0x8267},
	{0x6201, 0x2315, 0x4113, 0x5102, 0x4223, 0x1326, 0x3304, 0x1146, 0x2245, 0x8337, 0x8157, 0x8267},
	{0x4113, 0x4223, 0x1326, 0x1146, 0x2245, 0x2315, 0x8337, 0x8157, 0x8267},
	{0x4223, 0x4113, 0x8157, 0x8267, 0x3304, 0x1146, 0x2245},
	{0x6201, 0x5102, 0x1146, 0x2245, 0x4223, 0x4113, 0x8157, 0x8267},
	{0x8157, 0x8267, 0x4223, 0x6201, 0x2315, 0x3304, 0x1146, 0x2245},
	{0x2315, 0x8157, 0x8267, 0x4223, 0x5102, 0x1146, 0x2245},
	{0x1326, 0x5102, 0x4113, 0x8157, 0x8267, 0x3304, 0x1146, 0x2245},
	{0x1326, 0x1146, 0x2245, 0x6201, 0x4113, 0x8157, 0x8267},
	{0x5102, 0x6201, 0x2315, 0x8157, 0x8267, 0x1326, 0x3304, 0x1146, 0x2245},
	{0x1326, 0x1146, 0x2245, 0x2315, 0x8157, 0x8267},
	{0x2315, 0x2245, 0x8267, 0x8337},
	{0x2315, 0x2245, 0x8267, 0x8337, 0x6201, 0x5102, 0x3304},
	{0x4113, 0x6201, 0x2245, 0x8267, 0x8337},
	{0x5102, 0x4113, 0x8337, 0x8267, 0x2245, 0x3304},
	{0x2315, 0x2245, 0x8267, 0x8337, 0x5102, 0x4223, 0x1326},
	{0x6201, 0x4223, 0x1326, 0x3304, 0x8337, 0x2315, 0x2245, 0x8267},
	{0x4113, 0x6201, 0x2245, 0x8267, 0x8337, 0x5102, 0x4223, 0x1326},
	{0x4113, 0x4223, 0x1326, 0x3304, 0x2245, 0x8267, 0x8337},
	{0x2315, 0x2245, 0x8267, 0x4223, 0x4113},
	{0x2315, 0x2245, 0x8267, 0x4223, 0x4113, 0x6201, 0x5102, 0x3304},
	{0x6201, 0x2245, 0x8267, 0x4223},
	{0x3304, 0x2245, 0x8267, 0x4223, 0x5102},
	{0x5102, 0x4113, 0x2315, 0x2245, 0x8267, 0x1326},
	{0x4113, 0x2315, 0x2245, 0x8267, 0x1326, 0x3304, 0x6201},
	{0x5102, 0x6201, 0x2245, 0x8267, 0x1326},
	{0x3304, 0x2245, 0x8267, 0x1326},
	{0x8267, 0x8337, 0x2315, 0x3304, 0x1146},
	{0x5102, 0x1146, 0x8267, 0x8337, 0x2315, 0x6201},
	{0x3304, 0x1146, 0x8267, 0x8337, 0x4113, 0x6201},
	{0x8337, 0x4113, 0x5102, 0x1146, 0x8267},
	{0x8267, 0x8337, 0x2315, 0x3304, 0x1146, 0x5102, 0x4223, 0x1326},
	{0x1146, 0x8267, 0x8337, 0x2315, 0x6201, 0x4223, 0x1326},
	{0x8267, 0x8337, 0x4113, 0x6201, 0x3304, 0x1146, 0x5102, 0x4223, 0x1326},
	{0x4113, 0x4223, 0x1326, 0x1146, 0x8267, 0x8337},
	{0x3304, 0x2315, 0x4113, 0x4223, 0x8267, 0x1146},
	{0x2315, 0x6201, 0x5102, 0x1146, 0x8267, 0x4223, 0x4113},
	{0x1146, 0x8267, 0x4223, 0x6201, 0x3304},
	{0x5102, 0x1146, 0x8267, 0x4223},
	{0x8267, 0x1326, 0x5102, 0x4113, 0x2315, 0x3304, 0x1146},
	{0x6201, 0x4113, 0x2315, 0x1326, 0x1146, 0x8267},
	{0x6201, 0x3304, 0x1146, 0x8267, 0x1326, 0x5102},
	{0x1326, 0x1146, 0x8267},
	{0x1326, 0x8337, 0x8157, 0x1146},
	{0x8337, 0x8157, 0x1146, 0x1326, 0x6201, 0x5102, 0x3304},
	{0x8337, 0x8157, 0x1146, 0x1326, 0x6201, 0x2315, 0x4113},
	{0x4113, 0x5102, 0x3304, 0x2315, 0x1326, 0x8337, 0x8157, 0x1146},
	{0x8337, 0x8157, 0x1146, 0x5102, 0x4223},
	{0x6201, 0x4223, 0x8337, 0x8157, 0x1146, 0x3304},
	{0x8337, 0x8157, 0x1146, 0x5102, 0x4223, 0x6201, 0x2315, 0x4113},
	{0x4223, 0x8337, 0x8157, 0x1146, 0x3304, 0x2315, 0x4113},
	{0x4223, 0x4113, 0x8157, 0x1146, 0x1326},
	{0x4223, 0x4113, 0x8157, 0x1146, 0x1326, 0x6201, 0x5102, 0x3304},
	{0x1146, 0x8157, 0x2315, 0x6201, 0x4223, 0x1326},
	{0x4223, 0x5102, 0x3304, 0x2315, 0x8157, 0x1146, 0x1326},
	{0x4113, 0x8157, 0x1146, 0x5102},
	{0x6201, 0x4113, 0x8157, 0x1146, 0x3304},
	{0x2315, 0x8157, 0x1146, 0x5102, 0x6201},
	{0x2315, 0x8157, 0x1146, 0x3304},
	{0x2245, 0x3304, 0x1326, 0x8337, 0x8157},
	{0x6201, 0x2245, 0x8157, 0x8337, 0x1326, 0x5102},
	{0x2245, 0x3304, 0x1326, 0x8337, 0x8157, 0x6201, 0x2315, 0x4113},
	{0x2245, 0x2315, 0x4113, 0x5102, 0x1326, 0x8337, 0x8157},
	{0x4223, 0x8337, 0x8157, 0x2245, 0x3304, 0x5102},
	{0x8157, 0x2245, 0x6201, 0x4223, 0x8337},
	{0x2245, 0x3304, 0x5102, 0x4223, 0x8337, 0x8157, 0x4113, 0x6201, 0x2315},
	{0x4223, 0x8337, 0x8157, 0x2245, 0x2315, 0x4113},
	{0x4113, 0x8157, 0x2245, 0x3304, 0x1326, 0x4223},
	{0x1326, 0x4223, 0x4113, 0x8157, 0x2245, 0x6201, 0x5102},
	{0x8157, 0x2245, 0x3304, 0x1326, 0x4223, 0x6201, 0x2315},
	{0x5102, 0x1326, 0x4223, 0x2315, 0x8157, 0x2245},
	{0x3304, 0x5102, 0x4113, 0x8157, 0x2245},
	{0x4113, 0x8157, 0x2245, 0x6201},
	{0x5102, 0x6201, 0x2315, 0x8157, 0x2245, 0x3304},
	{0x2315, 0x8157, 0x2245},
	{0x1146, 0x1326, 0x8337, 0x2315, 0x2245},
	{0x1146, 0x1326, 0x8337, 0x2315, 0x2245, 0x6201, 0x5102, 0x3304},
	{0x6201, 0x2245, 0x1146, 0x1326, 0x8337, 0x4113},
	{0x2245, 0x1146, 0x1326, 0x8337, 0x4113, 0x5102, 0x3304},
	{0x5102, 0x1146, 0x2245, 0x2315, 0x8337, 0x4223},
	{0x1146, 0x3304, 0x6201, 0x4223, 0x8337, 0x2315, 0x2245},
	{0x8337, 0x4113, 0x6201, 0x2245, 0x1146, 0x5102, 0x4223},
	{0x4223, 0x8337, 0x4113, 0x3304, 0x2245, 0x1146},
	{0x4113, 0x2315, 0x2245, 0x1146, 0x1326, 0x4223},
	{0x1146, 0x1326, 0x4223, 0x4113, 0x2315, 0x2245, 0x6201, 0x5102, 0x3304},
	{0x1326, 0x4223, 0x6201, 0x2245, 0x1146},
	{0x4223, 0x5102, 0x3304, 0x2245, 0x1146, 0x1326},
	{0x2245, 0x1146, 0x5102, 0x4113, 0x2315},
	{0x4113, 0x2315, 0x2245, 0x1146, 0x3304, 0x6201},
	{0x6201, 0x2245, 0x1146, 0x5102},
	{0x3304, 0x2245, 0x1146},
	{0x3304, 0x1326, 0x8337, 0x2315},
	{0x5102, 0x1326, 0x8337, 0x2315, 0x6201},
	{0x6201, 0x3304, 0x1326, 0x8337, 0x4113},
	{0x5102, 0x1326, 0x8337, 0x4113},
	{0x4223, 0x8337, 0x2315, 0x3304, 0x5102},
	{0x6201, 0x4223, 0x8337, 0x2315},
	{0x3304, 0x5102, 0x4223, 0x8337, 0x4113, 0x6201},
	{0x4113, 0x4223, 0x8337},
	{0x4113, 0x2315, 0x3304, 0x1326, 0x4223},
	{0x1326, 0x4223, 0x4113, 0x2315, 0x6201, 0x5102},
	{0x3304, 0x1326, 0x4223, 0x6201},
	{0x5102, 0x1326, 0x4223},
	{0x5102, 0x4113, 0x2315, 0x3304},
	{0x6201, 0x4113, 0x2315},
	{0x6201, 0x3304, 0x5102},
	{}
'''


if __name__ == '__main__':
	vclasses = [int(vc, 16) for vc in voxel_classes.strip().split(',')]
	
	classes = [[int(i)
				for i in c.strip().split(' ', 1)[1][1:-1].replace('}', '').split(',')
				if len(i) > 0
			   ] for c in class_indexes.strip().split('\n')]
			   
	vertices = [[(int(i[-2]), int(i[-1]))
				for i in vs.strip()[1:-1].replace('}', '').split(',')
				if len(i) > 0
			   ] for vs in voxel_vertices.strip().split('\n')]
	
	for i in range(256):
		vs = [vertices[i][v] for v in classes[vclasses[i]]]
		
		b = [0]*3
		b[0] = min(3, len(vs)/3)
		if len(vs) > 9:
			b[1] = len(vs)/3 - 3
		
		for idx in range(len(vs)):
			off = 2 + 6*(idx % 5)
			b[idx / 5] += (vs[idx][0] << off) + (vs[idx][1] << (off+3))
			
		
		print '{ %su, %su, %su },' % (b[0], b[1], b[2])
		
		
		# check the compression
		_vs = []
		tri = []
		itri = 0
		bi = 0
		idx = 0
		by = b[0]
		limit = by % 4
		by >>= 2
		while limit > 0:
			tri.append((by % 8, (by >> 3) % 8))
			itri += 1
			idx += 1
			if itri == 3:
				_vs += tri
				tri = []
				itri = 0
				limit -= 1
				if limit == 0:
					break
			
			if idx < 5:
				by >>= 6
			else:
				idx = 0
				bi += 1
				by = b[bi]
				limit += by % 4
				by >>= 2
			
		if vs != _vs:
			print "nope: %s != %s" % (vs, _vs)
			